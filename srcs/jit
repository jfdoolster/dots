#!/usr/bin/bash
BASEDIR=$(pwd)


ISGIT=$(git -C $BASEDIR rev-parse --is-inside-work-tree 2> /dev/null)

if [ "$ISGIT" == "" ]; then
    echo "$BASEDIR is not part of a git directory"
    exit 1
fi
GITBASE=$BASEDIR

GITTOP=$(git -C $BASEDIR rev-parse --path-format=absolute --show-superproject-working-tree)
if [ "$GITTOP" != "" ]; then
    GITBASE=$GITTOP
fi

#echo "BASEDIR=$BASEDIR"
#echo "ISGIT=$ISGIT"
#echo "GITTOP=$GITTOP"
#echo "GITBASE=$GITBASE"

gfetch() {
    git -C $GITBASE submodule foreach 'git fetch'
    git -C $GITBASE fetch
}
gstatus() {
    git -C $GITBASE submodule foreach 'git status -s'
    git -C $GITBASE status
}
gpull() {
    git -C $GITBASE submodule foreach 'git pull origin main'
    git -C $GITBASE pull origin main
}
gcommit() {
    COMMIT_MESSAGE=$1
    git -C $GITBASE submodule foreach "git add .; git commit -m'${COMMIT_MESSAGE}' || :"
    git -C $GITBASE add .; git -C $GITBASE commit -m"${COMMIT_MESSAGE}" || :
}
gpush() {
    git -C $GITBASE submodule foreach 'git push origin main'
    git -C $GITBASE push origin main
}

if [ $# -ne 0 ] && [ "$1" == "fetch" ]; then
    gfetch
elif [ $# -ne 0 ] && [ "$1" == "pull" ]; then
    gpull
elif [ $# -ne 0 ] && [ "$1" == "commit" ]; then
    COMMITSTR="autocommit: $USER@$HOSTNAME ($(date +'%y/%m/%d %T'))"
    if [ "$2" != "" ]; then
        COMMITSTR="$2"
    fi
    gcommit "$COMMITSTR"
elif [ $# -ne 0 ] && [ "$1" == "push" ]; then
    gpush
else
    gstatus
fi

